name: Deploy to production

'on':
  push:
    branches:
      - prod/init #main

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v4
      id: install

    - name: Set Production mode and AWS config
      run: |
        echo "PROD=true" >> app.env
        echo "AWS_REGION=${{ secrets.AWS_S3_REGION }}" >> app.env
        echo "AWS_CREDENTIALS_1=${{ secrets.AWS_CREDENTIALS_1 }}" >> app.env
        echo "AWS_CREDENTIALS_2=${{ secrets.AWS_CREDENTIALS_2 }}" >> app.env
        echo "AWS_CREDENTIALS_3=${{ secrets.AWS_CREDENTIALS_3 }}" >> app.env
        echo "API_KEY=${{ secrets.OPENAI_API_KEY }}" >> app.env
       
    - name: Replace placeholders in app.env
      run: |
        sed -i '/DB_URL/d' app.env
        sed -i '/DB_DRIVER/d' app.env
        echo "DB_URL=${{ secrets.DATABASE_URL }}" >> app.env
        echo "DB_DRIVER=${{ secrets.DATABASE_DRIVER }}" >> app.env
        cat app.env
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: summafy/app
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

    # - name: Update kube config
    #   run: aws eks update-kubeconfig --name simple-bank-eks --region eu-west-1

    # - name: Deploy image to Amazon EKS
    #   run: |
    #     kubectl apply -f eks/aws-auth.yaml
    #     kubectl apply -f eks/deployment.yaml
    #     kubectl apply -f eks/service.yaml
    #     kubectl apply -f eks/issuer.yaml
    #     kubectl apply -f eks/ingress-nginx.yaml
    #     kubectl apply -f eks/ingress-http.yaml
    #     kubectl apply -f eks/ingress-grpc.yaml
