// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: summary.sql

package db

import (
	"context"
)

const changeSummary = `-- name: ChangeSummary :exec
UPDATE summary SET summary = $2 WHERE doc_id = $1 RETURNING id, doc_id, param1, param2, summary
`

type ChangeSummaryParams struct {
	DocID   int64  `json:"doc_id"`
	Summary []byte `json:"summary"`
}

func (q *Queries) ChangeSummary(ctx context.Context, arg ChangeSummaryParams) error {
	_, err := q.db.ExecContext(ctx, changeSummary, arg.DocID, arg.Summary)
	return err
}

const createSummary = `-- name: CreateSummary :one
INSERT INTO summary (
  doc_id,
  param1,
  param2,
  summary
) VALUES (
  $1, $2, $3, $4
) RETURNING id, doc_id, param1, param2, summary
`

type CreateSummaryParams struct {
	DocID   int64  `json:"doc_id"`
	Param1  bool   `json:"param1"`
	Param2  bool   `json:"param2"`
	Summary []byte `json:"summary"`
}

func (q *Queries) CreateSummary(ctx context.Context, arg CreateSummaryParams) (Summary, error) {
	row := q.db.QueryRowContext(ctx, createSummary,
		arg.DocID,
		arg.Param1,
		arg.Param2,
		arg.Summary,
	)
	var i Summary
	err := row.Scan(
		&i.ID,
		&i.DocID,
		&i.Param1,
		&i.Param2,
		&i.Summary,
	)
	return i, err
}

const deleteSummary = `-- name: DeleteSummary :exec
DELETE FROM summary WHERE summary = $1
`

func (q *Queries) DeleteSummary(ctx context.Context, summary []byte) error {
	_, err := q.db.ExecContext(ctx, deleteSummary, summary)
	return err
}

const getSummary = `-- name: GetSummary :one
SELECT id, doc_id, param1, param2, summary FROM summary  
WHERE doc_id IS NOT NULL AND doc_id = $1 LIMIT 1
`

func (q *Queries) GetSummary(ctx context.Context, docID int64) (Summary, error) {
	row := q.db.QueryRowContext(ctx, getSummary, docID)
	var i Summary
	err := row.Scan(
		&i.ID,
		&i.DocID,
		&i.Param1,
		&i.Param2,
		&i.Summary,
	)
	return i, err
}
